//Check out the function syntax and change the code to make the function start return the string "OK".
fun start(): String {
    return "OK"
}



//Make the function joinOptions() return the list in a JSON format (for example, [a, b, c]) by specifying only two arguments.
fun joinOptions(options: Collection<String>) =
        options.joinToString(separator = ", ", prefix = "[", postfix = "]")
        
        
        
//You can replace all these Java overloads with one function in Kotlin. Change the declaration 
//of the foo function in a way that makes the code using foo compile. Use default and named arguments.
fun foo(name: String, number: Int = 42, toUpperCase: Boolean = false): String =
    (if (toUpperCase) name.uppercase() else name) + number
fun useFoo() = listOf(
        foo("a"),
        foo("b", number = 1),
        foo("c", toUpperCase = true),
        foo(name = "d", number = 2, toUpperCase = true)
)




//Replace the trimIndent call with the trimMargin call taking # as the prefix value
//so that the resulting string doesn't contain the prefix character.
const val question = "life, the universe, and everything"
const val answer = 42

val tripleQuotedString = """
    #question = "$question"
    #answer = $answer""".trimMargin("#")

fun main() {
    println(tripleQuotedString)
}



//Using the month variable, rewrite this pattern in such a way that it matches the date 
//in the format 13 JUN 1992 (two digits, one whitespace, a month abbreviation, 
//one whitespace, four digits).
